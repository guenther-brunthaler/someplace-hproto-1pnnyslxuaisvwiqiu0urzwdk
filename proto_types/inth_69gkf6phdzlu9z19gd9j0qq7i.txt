"inth" (UUID 69gkf6phdzlu9z19gd9j0qq7i) - a signed integer of arbitrary magnitude. This is the human-friendly counterpart of the slightly more effcient "int" type. It encodes the absolute value of the signed integer as a "uint", interpreting the special marker-value 8 in the most significant nybble (and only there) as a negative sign. Any other value in the most significant nybble means a positive number. In other words, a most significant nybble with the value 8 acts as a minus sign for the absolute value following it. As with "uint", there is the same interpretation that an empty string will be interpreted as the (positive, in this case) value 0. A few examples shall explain things: The value +5 is encoded just as 0x05. The value -5 is encoded as 0x85. The value 255 encodes as 0xff. The value -255 encodes as 0x80 0xff. The value 8 encodes as 0x08. The value -8 encodes as 0x88. The value 0x80 encodes as 0x00 0x80. The value -0x80 encodes as 0x80 0x80. The value 0x12345 encodes as 0x01 0x23 0x45. The value -0x12345 encodes as 0x81 0x23 0x45. The value 0x89ab encodes as 0x00 0x89 0xab. The value -0x89ab encodes as 0x80 0x89 0xab. Note that this format allows a positive as well as a negative zero. It is recommended that a negative zero shall be treated like a positive one in calculations. It is also recommended to avoid serializing a negative zero and serializing a positive one instead. Note that when serializing a value with a leading zero octet as an "uint", care must be taken that this leading octet is not removed by the "uint" serialization procedure as an unwanted "optimization". External types referenced from within this type definition: "int" (UUID gyj6jm8psufclh72ka1unkbct), "uint" (UUID gyic709md7c9icf8wl1akdcq7). This is a quite human-friendly format for manual decoding.
