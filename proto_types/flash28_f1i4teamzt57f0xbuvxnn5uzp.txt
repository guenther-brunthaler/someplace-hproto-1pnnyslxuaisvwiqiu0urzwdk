"flash28" (UUID f1i4teamzt57f0xbuvxnn5uzp): A floating-slash rational number with a denominator up to 28 bit. Encoded as an "uint" resulting from the expression `(<numerator> * 2 ** (4 * (<quads> + 1)) + <denominator> * 2 ** 4 + <sign> * 4 + <quads>)`. <quads> is a value from 0 to 7 and represents 1/4th of the bit width of the denominator field. <sign> is 0 for a positive and 1 for a negative floating-slash number. Typically, this encoding format is chosen for 32-bit floating-slash numbers. Let's say we want to encode the fraction 91/12. We decide to use a 4-bit denominator which is enough to store the number 12. Then <quads> is 1 and <sign> is 0, yielding `(91 * 2 ** (4 * (1 + 1)) + 12 * 2 ** 4 + 0 * 4 + 1) = 23489` as the "uint" to become serialized. The serialized numbers contain the following packed bit-fields, starting from the right side: 3 bits for <quads>, 1 bit for <sign>, <quads>*4 bits for the denominator, then all the remaining bits representing the numerator. If <quads> is 0, then the actually missing denominator is implied as the value 1. The canonical representation of 0 is 0/1. The canonical representation of +/- infinity are 1/0 and -1/0. The canonical expression for NaN is 0/0. There is no requirement that GCD(numerator, denominator) must be 1, even though it might be a good idea to make it so in order to minimize the size of the serialization. External types referenced from within this type definition: "uint" (UUID gyic709md7c9icf8wl1akdcq7).
