"s10bcd4e4" (UUID sm9winegqnwb5kyfrqxcf4k8r): Signed 4-bit BCD number using 10's complement. Negative numbers are encoded as positive ones by subtracting the absolute value of the number from a decimal number of the same number of digits where every digit is "0", plus a "1" digit prepended to the result. For instance, given decimal value -12.34 to be encoded, first note that this will need 5 BCD digits for encoding because of the exponent, and will actually need 6 BCD digits because BCD digits can only be packed as pairs. This means a leading 0 digit must be added in order to make the number fit into a packed BCD encoding. So the number to be encoded is "-012.34". Now we create a copy of the absolute value and change every digit into "0". This yields "000.00". Then prefix this with a "1", giving "1000.00". Subtract the "012.34" from this. This gives "987.66", a number with 2 fractional digits, which will be encoded as a "ubcd4e4". This gives the hex dump 0x98 0x76 0x62. In this representation, the most significant digit represents the sign: A digit from 0 through 4 is positive and stored as-is (no subtraction). But a digit from 5 through 9 means it is a negative number and has been encoded as explained above. Note that the sign is always stored in the most significant digit present in the encoding. External types referenced from within this type definition: "ubcd4e4" (UUID sm923fbun8pipd4ctcibiuzb6).
